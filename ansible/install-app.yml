#
# certservice install playbook
#

- hosts: "{{ target }}"
  serial: 1
  max_fail_percentage: 10
  gather_facts: false
  remote_user: iamcert

  vars:
    cs_root: /data/local/cs
    proj_root: ..

  tasks:

  - name: check for secrets file
    stat: path="{{ cs_root }}/cs-secrets.properties"
    register: cssecrets
  - name: fail if secrets file not found
    fail: msg="secrets file not preloaded on target"
    when: not cssecrets.stat.exists

  # copy cs properties file
  # change restarts tomcat
  - name: copy properties file
    copy:
      src: "{{ proj_root }}/cs.properties.{{ cluster_type }}"
      dest: "{{ cs_root }}/cs.properties"
      group: iam-dev
      mode: 0664
      backup: true
    notify: restart tomcat

  # update http and https config
  # change restarts apache
  - name: copy http apache config
    template:
      src: apache/http.j2
      dest: /data/conf/apache.conf.d/http.cs
      group: iam-dev
      mode: 0664
      backup: true
    notify: restart apache

  - name: copy https apache config
    template:
      src: apache/https.j2
      dest: /data/conf/apache.conf.d/https.cs
      group: iam-dev
      mode: 0664
      backup: true
    notify: restart apache

  # update the cs.war file
  - name: copy cs.war
    copy:
      src: "{{ proj_root }}/target/cs.war"
      dest: /data/local/wars/cs.war
      group: iam-dev
      mode: 0664
      backup: true
    register: warfile

    # unpack the cs.war file
  - name: unpack cs.war
    shell: "rm -rf /data/webapps/cs; mkdir /data/webapps/cs; cd /data/webapps/cs; jar xf /data/local/wars/cs.war"
    when: warfile.changed
    notify:
      - restart tomcat

    # run any handlers
  - meta: flush_handlers

  handlers:

  - name: restart apache
    command: /usr/bin/nohup /data/local/bin/ansible_command apache restart
#   notify:
#     - wait_for_apache

  - name: restart tomcat
    command: /usr/bin/nohup /data/local/bin/ansible_command tomcat restart
    notify: wait for tomcat

  # wait for tomcat to restart
  - name: wait for tomcat
    shell: "c=0;while [ $c -lt 20 ]; do [[ \"`curl -k -f https://localhost/tomcatmanager/text/list 2>/dev/null  | grep 'cs'`\" =~ 'cs' ]] && exit 0; let c=c+1;sleep 5; done; exit 1"
    register: wait_result
    failed_when: "wait_result.rc != 0"
